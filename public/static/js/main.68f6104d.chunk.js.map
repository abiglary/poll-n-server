{"version":3,"sources":["components/HomePage.js","api.js","components/auth/LoginPage.js","components/auth/SignupPage.js","components/NavBar.js","components/vote/PollDetails.js","components/vote/PollCarousel.js","components/vote/PopularPolls.js","components/vote/AddPoll.js","components/NotFound.js","components/auth/ProfilePage.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","currentUser","this","props","react_default","a","createElement","className","src","alt","username","href","role","Component","backendApi","axios","create","baseURL","process","withCredentials","errorHandler","err","response","data","console","log","getNextPoll","userId","get","concat","catch","LoginPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","originalPassword","event","_event$target","target","name","value","setState","defineProperty","loginCredentials","_this2","preventDefault","post","then","loginSuccess","_this3","Redirect","to","onSubmit","handleSubmit","htmlFor","onChange","genericOnChange","type","id","placeholder","SignupPage","originalEmail","originalUsercode","errorMessage","tags","userSubmission","signupSuccess","message","NavBar","logoutConfirmed","NavLink","exact","data-toggle","data-target","onClick","logoutClick","PollDetails","pollItem","voteValue","pollSubmission","_id","title","createdAt","description","sendVote","PollCarousel","src_components_NavBar","lib_default","swipeOptions","continuous","components_vote_PollDetails","PopularPolls","pollArray","map","onePoll","poll","key","shortText","longText","AddPoll","image","isSubmitSuccessful","NotFound","ProfilePage","oneTag","App","userInfo","localStorage","getItem","JSON","parse","newUser","setItem","stringify","removeItem","Switch","Route","path","render","src_components_HomePage","components_auth_ProfilePage","components_auth_SignupPage","user","updateUser","components_auth_LoginPage","component","components_vote_PollCarousel","logoutSuccess","components_vote_PopularPolls","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kgBAqEeA,0LAhEJ,IACCC,EAAgBC,KAAKC,MAArBF,YACR,OACEG,EAAAC,EAAAC,cAAA,WAASC,UAAU,YACjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,qBAAqBC,IAAI,mBAEjCR,EACCG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBACUF,EAAAC,EAAAC,cAAA,SAAIL,EAAYS,UAD1B,MAGAN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KACEC,UAAU,kBACVI,KAAK,iBACLC,KAAK,UAHP,iBAOAR,EAAAC,EAAAC,cAAA,KACEC,UAAU,kBACVI,KAAK,iBACLC,KAAK,UAHP,eAOAR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBI,KAAK,YAAYC,KAAK,UAArD,YAGAR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBI,KAAK,gBAAgBC,KAAK,UAAzD,kBAMJR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KACEC,UAAU,kBACVI,KAAK,iBACLC,KAAK,UAHP,aAOAR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBI,KAAK,eAAeC,KAAK,UAAxD,WAGAR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBI,KAAK,cAAcC,KAAK,UAAvD,oBAtDSC,8CCDjBC,SAAaC,EAAMC,OAAO,CAC9BC,QAASC,GAETC,iBAAiB,IAGnB,SAASC,EAAaC,GAOpB,MANIA,EAAIC,UAAYD,EAAIC,SAASC,KAC/BC,QAAQC,IAAI,YAAaJ,EAAIC,SAASC,MAEtCC,QAAQC,IAAI,mBAAoBJ,EAAIC,UAGhCD,EAYD,SAASK,EAAYC,GAC1B,OAAOb,EAAWc,IAAX,yBAAAC,OAAwCF,IAAUG,MAAMV,OCsClDW,cA7Db,SAAAA,EAAY5B,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA6B,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAnC,KAAMC,KACDmC,MAAQ,CACX5B,SAAU,GACV6B,iBAAkB,IAJHP,+EAQHQ,GAAO,IAAAC,EACGD,EAAME,OAAtBC,EADaF,EACbE,KAAMC,EADOH,EACPG,MACd1C,KAAK2C,SAALZ,OAAAa,EAAA,EAAAb,CAAA,GAAiBU,EAAOC,yCAGbJ,GAAO,ID4BIO,EC5BJC,EAAA9C,KAClBsC,EAAMS,kBD2BgBF,EC1BZ7C,KAAKoC,MD2BVxB,EACJoC,KAAK,qBAAsBH,GAC3BjB,MAAMV,IC7Be+B,KAAK,SAAA7B,GACzBE,QAAQC,IAAI,SAAUH,EAASC,MAC/ByB,EAAK7C,MAAMiD,aAAa9B,EAASC,yCAI5B,IAAA8B,EAAAnD,KACP,OAAOA,KAAKC,MAAMF,YAChBG,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAUC,GAAG,mBAEbnD,EAAAC,EAAAC,cAAA,WAASC,UAAU,aACjBH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,QAAMkD,SAAU,SAAAhB,GAAK,OAAIa,EAAKI,aAAajB,KACzCpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,YAAf,YACAtD,EAAAC,EAAAC,cAAA,SACEqD,SAAU,SAAAnB,GAAK,OAAIa,EAAKO,gBAAgBpB,IACxCI,MAAO1C,KAAKoC,MAAM5B,SAClBiC,KAAK,WACLkB,KAAK,OACLtD,UAAU,eACVuD,GAAG,WACHC,YAAY,qBAGhB3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,YAAf,YACAtD,EAAAC,EAAAC,cAAA,SACEqD,SAAU,SAAAnB,GAAK,OAAIa,EAAKO,gBAAgBpB,IACxCI,MAAO1C,KAAKoC,MAAMC,iBAClBI,KAAK,mBACLkB,KAAK,WACLtD,UAAU,eACVuD,GAAG,WACHC,YAAY,qBAGhB3D,EAAAC,EAAAC,cAAA,UAAQuD,KAAK,SAAStD,UAAU,mBAAhC,mBArDcM,aCyITmD,qBAxIb,SAAAA,EAAY7D,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA8D,IACjBhC,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAA+B,GAAA3B,KAAAnC,KAAMC,KACDmC,MAAQ,CACX5B,SAAU,GACV6B,iBAAkB,GAClB0B,cAAe,GACfC,iBAAkB,GAClBC,aAAc,GACdC,KAAM,IARSpC,+EAYHQ,GAAO,IAAAC,EACGD,EAAME,OAAtBC,EADaF,EACbE,KAAMC,EADOH,EACPG,MACd1C,KAAK2C,SAALZ,OAAAa,EAAA,EAAAb,CAAA,GAAiBU,EAAOC,yCAGbJ,GAAO,IFkBK6B,EElBLrB,EAAA9C,KAClBsB,QAAQC,IAAI,OAAQvB,KAAKoC,MAAM8B,MAE/B5B,EAAMS,kBFeiBoB,EEdZnE,KAAKoC,MFeXxB,EACJoC,KAAK,sBAAuBmB,GAC5BvC,MAAMV,IEhBJ+B,KAAK,SAAA7B,GACJ0B,EAAKH,SAAS,CACZnC,SAAU,GACV6B,iBAAkB,GAClB0B,cAAe,GACfC,iBAAkB,GAClBC,aAAc,GACdC,KAAM,KAER5C,QAAQC,IAAI,iBAAkBH,EAASC,MACvCyB,EAAK7C,MAAMmE,cAAchD,EAASC,QAEnCO,MAAM,SAAAT,GACL2B,EAAKH,SAAS,CAAEsB,aAAc9C,EAAIC,SAASC,KAAKgD,6CAI7C,IAAAlB,EAAAnD,KACCD,EAAgBC,KAAKC,MAArBF,YACR,OACEG,EAAAC,EAAAC,cAAA,WAASC,UAAU,cAChBN,EACCG,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAUC,GAAG,MAEbnD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBAECJ,KAAKoC,MAAM6B,cACV/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBL,KAAKoC,MAAM6B,cAG7C/D,EAAAC,EAAAC,cAAA,QAAMkD,SAAU,SAAAhB,GAAK,OAAIa,EAAKI,aAAajB,KACzCpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,YAAf,YACAtD,EAAAC,EAAAC,cAAA,SACEqD,SAAU,SAAAnB,GAAK,OAAIa,EAAKO,gBAAgBpB,IACxCI,MAAO1C,KAAKoC,MAAM5B,SAClBiC,KAAK,WACLkB,KAAK,OACLtD,UAAU,eACVuD,GAAG,WACHC,YAAY,oBAEd3D,EAAAC,EAAAC,cAAA,SAAOwD,GAAG,eAAevD,UAAU,wBAAnC,2DAKFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,QAAf,QACAtD,EAAAC,EAAAC,cAAA,SACEqD,SAAU,SAAAnB,GAAK,OAAIa,EAAKO,gBAAgBpB,IACxCI,MAAO1C,KAAKoC,MAAM8B,KAClBzB,KAAK,OACLkB,KAAK,OACLtD,UAAU,eACVuD,GAAG,OACHC,YAAY,gBAEd3D,EAAAC,EAAAC,cAAA,SAAOwD,GAAG,WAAWvD,UAAU,wBAA/B,sDAKFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,YAAf,YACAtD,EAAAC,EAAAC,cAAA,SACEqD,SAAU,SAAAnB,GAAK,OAAIa,EAAKO,gBAAgBpB,IACxCI,MAAO1C,KAAKoC,MAAMC,iBAClBI,KAAK,mBACLkB,KAAK,WACLtD,UAAU,eACVuD,GAAG,WACHC,YAAY,oBAIhB3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,SAAf,SACAtD,EAAAC,EAAAC,cAAA,SACEqD,SAAU,SAAAnB,GAAK,OAAIa,EAAKO,gBAAgBpB,IACxCI,MAAO1C,KAAKoC,MAAM2B,cAClBtB,KAAK,gBACLkB,KAAK,QACLtD,UAAU,eACVuD,GAAG,QACHC,YAAY,iBAIhB3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,YAAf,0BACAtD,EAAAC,EAAAC,cAAA,SACEqD,SAAU,SAAAnB,GAAK,OAAIa,EAAKO,gBAAgBpB,IACxCI,MAAO1C,KAAKoC,MAAM4B,iBAClBvB,KAAK,mBACLkB,KAAK,OACLtD,UAAU,eACVuD,GAAG,WACHC,YAAY,uCAIhB3D,EAAAC,EAAAC,cAAA,UAAQuD,KAAK,SAAStD,UAAU,mBAAhC,qBA9HWM,+CC4FV2D,+LA3FC,IAAAxC,EAAA9B,KHgDPY,EAAWc,IAAI,eAAeE,MAAMV,GG/C7B+B,KAAK,SAAA7B,GACfE,QAAQC,IAAI,aAAcH,EAASC,MACnCS,EAAK7B,MAAMsE,qDAIN,IAAAzB,EAAA9C,KACCD,EAAgBC,KAAKC,MAArBF,YACR,OACEG,EAAAC,EAAAC,cAAA,WAASC,UAAU,UACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACbH,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAASnE,UAAU,2BAA2BoE,OAAK,EAACpB,GAAG,KAAvD,WAIAnD,EAAAC,EAAAC,cAAA,UACEC,UAAU,iBACVsD,KAAK,SACLe,cAAY,WACZC,cAAY,2BAEZzE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGlBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BuD,GAAG,0BAC3C1D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACXN,EACCG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BACdH,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAASnE,UAAU,WAAWgD,GAAG,iBAC9BtD,EAAYS,UAEfN,EAAAC,EAAAC,cAAA,UACEC,UAAU,oCACVuE,QAAS,kBAAM9B,EAAK+B,gBAFtB,YAQF3E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAASnE,UAAU,WAAWgD,GAAG,gBAAjC,YAIFnD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAASnE,UAAU,WAAWgD,GAAG,eAAjC,YAONnD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAASnE,UAAU,WAAWoE,OAAK,EAACpB,GAAG,KAAvC,SAIFnD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAASnE,UAAU,WAAWgD,GAAG,iBAAjC,WAIFnD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAASnE,UAAU,WAAWoE,OAAK,EAACpB,GAAG,aAAvC,YAMJnD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BACdH,EAAAC,EAAAC,cAAA,SACEC,UAAU,uBACVsD,KAAK,SACLE,YAAY,WAEd3D,EAAAC,EAAAC,cAAA,UACEC,UAAU,uCACVsD,KAAK,UAFP,qBA9EOhD,cC8ENmE,qBA3Eb,SAAAA,EAAY7E,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA8E,IACjBhD,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAA+C,GAAA3C,KAAAnC,KAAMC,KACDmC,MAAQ,CACXrC,YAAa+B,EAAK7B,MAAMF,YACxBgF,SAAUjD,EAAK7B,MAAM8E,SACrBC,UAAW,IALIlD,wEASVkD,GAAW,IJmBGC,EInBHnC,EAAA9C,KAClBA,KAAK2C,SAAS,CAAEqC,UAAWA,KJkBNC,EIjBZjF,KAAKoC,MJkBTxB,EAAWoC,KAAK,iBAAkBiC,GAAgBrD,MAAMV,IIlBxC+B,KACnBzB,EAAYxB,KAAKoC,MAAMrC,YAAYmF,KAAKjC,KAAK,SAAA7B,GAC3CE,QAAQC,IAAI,YAAaH,EAASC,MAClCyB,EAAKH,SAAS,CAAEoC,SAAU3D,EAASC,2CAKhC,IAAA8B,EAAAnD,KACC+E,EAAa/E,KAAKoC,MAAlB2C,SACR,OACE7E,EAAAC,EAAAC,cAAA,WAASC,UAAU,eACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAc0E,EAASI,QAEvCjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCACX0E,EAASK,WAEZlF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAa0E,EAASM,aAEpCnF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,cACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,eACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,SACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,YAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEbH,EAAAC,EAAAC,cAAA,UAAQwE,QAAS,kBAAMzB,EAAKmC,SAAS,KACnCpF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBADf,QAQFH,EAAAC,EAAAC,cAAA,UAAQwE,QAAS,kBAAMzB,EAAKmC,SAAS,KACnCpF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBADf,SAQFH,EAAAC,EAAAC,cAAA,UAAQwE,QAAS,kBAAMzB,EAAKmC,SAAS,KACnCpF,EAAAC,EAAAC,cAAA,eAEEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCAhELM,cCkDX4E,qBAhDb,SAAAA,EAAYtF,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAAuF,IACjBzD,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAwD,GAAApD,KAAAnC,KAAMC,KACDmC,MAAQ,CAAErC,YAAa+B,EAAK7B,MAAMF,YAAagF,SAAU,IAF7CjD,mFAKC,IAAAgB,EAAA9C,KAElBwB,EADwBxB,KAAKoC,MAArBrC,YACgBmF,KAAKjC,KAAK,SAAA7B,GAChCE,QAAQC,IAAI,YAAaH,EAASC,MAClCyB,EAAKH,SAAS,CAAEoC,SAAU3D,EAASC,0CAI9B,IACC0D,EAAa/E,KAAKoC,MAAlB2C,SAOR,OACE7E,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACjBH,EAAAC,EAAAC,cAACoF,EAAD,CAAQzF,YAAaC,KAAKoC,MAAMrC,cAChCG,EAAAC,EAAAC,cAACqF,EAAAtF,EAAD,CACEyD,GAAG,WACHvD,UAAU,WACVqF,aAAc,CAAEC,YAAY,IAG5BzF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwF,EAAD,CACEb,SAAUA,EACVhF,YAAaC,KAAKoC,MAAMrC,wBAlCXY,wBCgEZkF,cA7Db,SAAAA,EAAY5F,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA6F,IACjB/D,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAA8D,GAAA1D,KAAAnC,KAAMC,KACDmC,MAAQ,CAAE0D,UAAW,IAFThE,mFAKC,IAAAgB,EAAA9C,KNKbY,EAAWc,IAAI,cAAcE,MAAMV,GMJ1B+B,KAAK,SAAA7B,GACjBE,QAAQC,IAAI,aAAcH,EAASC,MACnCyB,EAAKH,SAAS,CAAEmD,UAAW1E,EAASC,0CAI/B,IACCyE,EAAc9F,KAAKoC,MAAnB0D,UACgB9F,KAAKC,MAArBF,YAER,OACEG,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBAQjBH,EAAAC,EAAAC,cAAA,2BAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZyF,EAAUC,IAAI,SAAAC,GACb,OACE9F,EAAAC,EAAAC,cAAA,KACEK,MApCQwF,EAoCaD,EAnCnC,iBAAArE,OAAwBsE,EAAKf,MAoCf7E,UAAU,OACV6F,IAAKF,EAAQd,KAEbhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe2F,EAAQG,WACtCjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAa2F,EAAQI,WAEpClG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,cACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,gBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,OACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,MACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,YArDtB,IAAwB4F,aAIGtF,aCwEZ0F,qBA3Eb,SAAAA,EAAYpG,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAAqG,IACjBvE,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAsE,GAAAlE,KAAAnC,KAAMC,KACDmC,MAAQ,CACX+D,UAAW,GACXC,SAAU,GACVE,MAAO,GACPC,oBAAoB,GANLzE,+EAUHQ,GAAO,IAAAC,EACGD,EAAME,OAAtBC,EADaF,EACbE,KAAMC,EADOH,EACPG,MACd1C,KAAK2C,SAALZ,OAAAa,EAAA,EAAAb,CAAA,GAAiBU,EAAOC,yCAGbJ,GAAO,IPUG2C,EOVHnC,EAAA9C,KAClBsC,EAAMS,iBACNzB,QAAQC,IAAI,sBAAuBe,IPQd2C,EOPZjF,KAAKoC,MPQTxB,EAAWoC,KAAK,aAAciC,GAAgBrD,MAAMV,IORpC+B,KAAK,SAAA7B,GACxBE,QAAQC,IAAI,WAAYH,EAASC,MACjCyB,EAAKH,SAAS,CAAE4D,oBAAoB,uCAI/B,IAAApD,EAAAnD,KACP,OAAOA,KAAKoC,MAAMmE,mBAChBrG,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAUC,GAAG,kBAEbnD,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACjBH,EAAAC,EAAAC,cAAA,QAAMkD,SAAU,SAAAhB,GAAK,OAAIa,EAAKI,aAAajB,KACzCpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,aAAf,SACAtD,EAAAC,EAAAC,cAAA,SACEqD,SAAU,SAAAnB,GAAK,OAAIa,EAAKO,gBAAgBpB,IACxCI,MAAO1C,KAAKoC,MAAM+D,UAClB1D,KAAK,YACLkB,KAAK,OACLtD,UAAU,eACVuD,GAAG,YACHC,YAAY,kBAGhB3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,YAAf,eACAtD,EAAAC,EAAAC,cAAA,SACEqD,SAAU,SAAAnB,GAAK,OAAIa,EAAKO,gBAAgBpB,IACxCI,MAAO1C,KAAKoC,MAAMgE,SAClB3D,KAAK,WACLkB,KAAK,OACLtD,UAAU,eACVuD,GAAG,WACHC,YAAY,wBAGhB3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,aAAf,aACAtD,EAAAC,EAAAC,cAAA,SACEqD,SAAU,SAAAnB,GAAK,OAAIa,EAAKO,gBAAgBpB,IACxCI,MAAO1C,KAAKoC,MAAMkE,MAClB7D,KAAK,QACLkB,KAAK,MACLtD,UAAU,eACVuD,GAAG,YACHC,YAAY,sBAGhB3D,EAAAC,EAAAC,cAAA,UAAQuD,KAAK,SAAStD,UAAU,gBAAhC,6BAnEYM,cCSP6F,0LATX,OACEtG,EAAAC,EAAAC,cAAA,WAASC,UAAU,YACjBH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,sEALeO,cC6BR8F,0LA3BJ,IACC1G,EAAgBC,KAAKC,MAArBF,YAER,OADAuB,QAAQC,IAAI,SAAUxB,GACdA,EAGNG,EAAAC,EAAAC,cAAA,WAASC,UAAU,eACjBH,EAAAC,EAAAC,cAAA,UAAKL,EAAYS,UAMjBN,EAAAC,EAAAC,cAAA,OACEE,IAAI,yEACJC,IAAKR,EAAYS,WAEnBN,EAAAC,EAAAC,cAAA,UACGL,EAAYmE,KAAK6B,IAAI,SAAAW,GACpB,OAAOxG,EAAAC,EAAAC,cAAA,UAAKsG,OAflBxG,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAUC,GAAG,aALO1C,cC4GXgG,cAjGb,SAAAA,EAAY1G,GAAO,IAAA6B,EAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA2G,GACjB7E,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAA4E,GAAAxE,KAAAnC,KAAMC,IACN,IAAI2G,EAAWC,aAAaC,QAAQ,eAFnB,OAGbF,IACFA,EAAWG,KAAKC,MAAMJ,IAExB9E,EAAKM,MAAQ,CACXrC,YAAa6G,GAPE9E,0EAWRmF,GACLA,EAEFJ,aAAaK,QAAQ,cAAeH,KAAKI,UAAUF,IAGnDJ,aAAaO,WAAW,eAE1BpH,KAAK2C,SAAS,CAAE5C,YAAakH,qCAGtB,IAAAnE,EAAA9C,KACP,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACiH,EAAA,EAAD,KACEnH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACE7C,OAAK,EACL8C,KAAK,IACLC,OAAQ,WACN,OAAOtH,EAAAC,EAAAC,cAACqH,EAAD,CAAU1H,YAAa+C,EAAKV,MAAMrC,iBAG7CG,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,KAAK,gBACLC,OAAQ,WACN,OACEtH,EAAAC,EAAAC,cAACsH,EAAD,CACE3H,YAAa+C,EAAKV,MAAMrC,iBAMhCG,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,KAAK,eACLC,OAAQ,WACN,OACEtH,EAAAC,EAAAC,cAACuH,EAAD,CACE5H,YAAa+C,EAAKV,MAAMrC,YACxBqE,cAAe,SAAAwD,GAAI,OAAI9E,EAAK+E,WAAWD,SAK/C1H,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,KAAK,cACLC,OAAQ,WACN,OACEtH,EAAAC,EAAAC,cAAC0H,EAAD,CACE/H,YAAa+C,EAAKV,MAAMrC,YACxBmD,aAAc,SAAA0E,GAAI,OAAI9E,EAAK+E,WAAWD,SAK9C1H,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOC,KAAK,YAAYQ,UAAW1B,IACnCnG,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,KAAK,iBACLC,OAAQ,WACN,OACEtH,EAAAC,EAAAC,cAAC4H,EAAD,CACEjI,YAAa+C,EAAKV,MAAMrC,YACxBkI,cAAe,SAAAL,GAAI,OAAI9E,EAAK+E,WAAWD,SAK/C1H,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOC,KAAK,wBAAwBQ,UAAWjD,IAC/C5E,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,KAAK,iBACLC,OAAQ,WACN,OACEtH,EAAAC,EAAAC,cAAC8H,EAAD,CACEnI,YAAa+C,EAAKV,MAAMrC,YACxBkI,cAAe,SAAAL,GAAI,OAAI9E,EAAK+E,WAAWD,SAK/C1H,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOS,UAAWvB,aA3FV7F,aCHEwH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCNNC,IAAShB,OACPtH,EAAAC,EAAAC,cAACqI,EAAA,EAAD,KACEvI,EAAAC,EAAAC,cAACsI,EAAD,OAEFC,SAASC,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9F,KAAK,SAAA+F,GACjCA,EAAaC","file":"static/js/main.68f6104d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./HomePage.css\";\n\nclass HomePage extends Component {\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <section className=\"HomePage\">\n        <h1 className=\"polln-title\">Poll(n)</h1>\n        <img src=\"pollN-logo-img.png\" alt=\"pollN-logo-img\" />\n\n        {currentUser ? (\n          <div>\n            <h2>\n              Welcome <b>{currentUser.username}</b> !\n            </h2>\n            <div>\n              <a\n                className=\"btn btn-primary\"\n                href=\"/popular-polls\"\n                role=\"button\"\n              >\n                Popular Polls\n              </a>\n              <a\n                className=\"btn btn-primary\"\n                href=\"/poll-carousel\"\n                role=\"button\"\n              >\n                Fresh Polls\n              </a>\n              <a className=\"btn btn-primary\" href=\"/my-polls\" role=\"button\">\n                My Polls\n              </a>\n              <a className=\"btn btn-primary\" href=\"/user-profile\" role=\"button\">\n                User Profile\n              </a>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <p>Welcome to the new instant-polls messaging system!</p>\n            <p>Swipe left = Yes</p>\n            <p>Swipe right = No</p>\n            <p>Swipe up = Skip</p>\n            <p>View More = Current Most Popular Polls</p>\n            <div>\n              <a\n                className=\"btn btn-primary\"\n                href=\"/popular-polls\"\n                role=\"button\"\n              >\n                View More\n              </a>\n              <a className=\"btn btn-primary\" href=\"/signup-page\" role=\"button\">\n                Sign Up\n              </a>\n              <a className=\"btn btn-primary\" href=\"/login-page\" role=\"button\">\n                Log In\n              </a>\n            </div>\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default HomePage;\n","import axios from \"axios\";\n\n// create an Axios object with pre-configured settings\nconst backendApi = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  // send cookies to the backend on every request\n  withCredentials: true\n});\n\nfunction errorHandler(err) {\n  if (err.response && err.response.data) {\n    console.log(\"API Error\", err.response.data);\n  } else {\n    console.log(\"React Code Error\", err.response);\n  }\n  // cause the error again so the .then() won't be called\n  throw err;\n}\n\n// POLL INFORMATION\nexport function getPollList() {\n  return backendApi.get(\"/api/polls\").catch(errorHandler);\n}\n\nexport function getPollDetails(pollId) {\n  return backendApi.get(`/api/polls/${pollId}`).catch(errorHandler);\n}\n\nexport function getNextPoll(userId) {\n  return backendApi.get(`/api/next-poll?userId=${userId}`).catch(errorHandler);\n}\n\nexport function postPoll(pollSubmission) {\n  return backendApi.post(\"/api/polls\", pollSubmission).catch(errorHandler);\n}\n\nexport function votePoll(pollSubmission) {\n  return backendApi.post(\"/api/vote-poll\", pollSubmission).catch(errorHandler);\n}\n\n// AUTHENTIFICATION\nexport function postSignUp(userSubmission) {\n  return backendApi\n    .post(\"/api/process-signup\", userSubmission)\n    .catch(errorHandler);\n}\n\nexport function postLogIn(loginCredentials) {\n  return backendApi\n    .post(\"/api/process-login\", loginCredentials)\n    .catch(errorHandler);\n}\n\nexport function getLogOut() {\n  return backendApi.get(\"/api/logout\").catch(errorHandler);\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./LoginPage.css\";\nimport { postLogIn } from \"../../api.js\";\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      originalPassword: \"\"\n    };\n  }\n\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    postLogIn(this.state).then(response => {\n      console.log(\"Log In\", response.data);\n      this.props.loginSuccess(response.data);\n    });\n  }\n\n  render() {\n    return this.props.currentUser ? (\n      <Redirect to=\"/poll-carousel\" />\n    ) : (\n      <section className=\"LoginPage\">\n        <h4>Log In</h4>\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.username}\n              name=\"username\"\n              type=\"text\"\n              className=\"form-control\"\n              id=\"username\"\n              placeholder=\"Enter username.\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.originalPassword}\n              name=\"originalPassword\"\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              placeholder=\"Enter username.\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Log In\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./SignupPage.css\";\nimport { postSignUp } from \"../../api.js\";\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      originalPassword: \"\",\n      originalEmail: \"\",\n      originalUsercode: \"\",\n      errorMessage: \"\",\n      tags: \"\"\n    };\n  }\n\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    console.log(\"TAGS\", this.state.tags);\n\n    event.preventDefault();\n    postSignUp(this.state)\n      .then(response => {\n        this.setState({\n          username: \"\",\n          originalPassword: \"\",\n          originalEmail: \"\",\n          originalUsercode: \"\",\n          errorMessage: \"\",\n          tags: \"\"\n        });\n        console.log(\"Sign Up Result\", response.data);\n        this.props.signupSuccess(response.data);\n      })\n      .catch(err => {\n        this.setState({ errorMessage: err.response.data.message });\n      });\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <section className=\"SignupPage\">\n        {currentUser ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <div>\n            <h4>Sign Up</h4>\n\n            {this.state.errorMessage && (\n              <div className=\"error-message\">{this.state.errorMessage}</div>\n            )}\n\n            <form onSubmit={event => this.handleSubmit(event)}>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <input\n                  onChange={event => this.genericOnChange(event)}\n                  value={this.state.username}\n                  name=\"username\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"username\"\n                  placeholder=\"Enter username.\"\n                />\n                <small id=\"usernameHelp\" className=\"form-text text-muted\">\n                  Make sure this username isn't too easily identifiable.\n                </small>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"tags\">Tags</label>\n                <input\n                  onChange={event => this.genericOnChange(event)}\n                  value={this.state.tags}\n                  name=\"tags\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"tags\"\n                  placeholder=\"Enter tags.\"\n                />\n                <small id=\"tagsHelp\" className=\"form-text text-muted\">\n                  Make sure the chosen terms are 'space-separated'.\n                </small>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  onChange={event => this.genericOnChange(event)}\n                  value={this.state.originalPassword}\n                  name=\"originalPassword\"\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  placeholder=\"Password here.\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  onChange={event => this.genericOnChange(event)}\n                  value={this.state.originalEmail}\n                  name=\"originalEmail\"\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  placeholder=\"Email here.\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"usercode\">Social Security Number</label>\n                <input\n                  onChange={event => this.genericOnChange(event)}\n                  value={this.state.originalUsercode}\n                  name=\"originalUsercode\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"usercode\"\n                  placeholder=\"Your Social Security Number here.\"\n                />\n              </div>\n\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Sign Up\n              </button>\n            </form>\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default SignupPage;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./NavBar.css\";\nimport { getLogOut } from \"../api.js\";\n\nclass NavBar extends Component {\n  logoutClick() {\n    getLogOut().then(response => {\n      console.log(\"Log Out OK\", response.data);\n      this.props.logoutConfirmed();\n    });\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <section className=\"NavBar\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <NavLink className=\"navbar-brand polln-title\" exact to=\"/\">\n            Poll(n)\n          </NavLink>\n\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n              {currentUser ? (\n                <form className=\"form-inline my-2 my-lg-0\">\n                  <NavLink className=\"nav-link\" to=\"/user-profile\">\n                    {currentUser.username}\n                  </NavLink>\n                  <button\n                    className=\"btn btn-outline-info my-2 my-sm-0\"\n                    onClick={() => this.logoutClick()}\n                  >\n                    Log Out\n                  </button>\n                </form>\n              ) : (\n                <div>\n                  <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/signup-page\">\n                      Sign Up\n                    </NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/login-page\">\n                      Log In\n                    </NavLink>\n                  </li>\n                </div>\n              )}\n\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to=\"/\">\n                  Home\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/browse-polls\">\n                  Browse\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to=\"/add-poll\">\n                  Create\n                </NavLink>\n              </li>\n            </ul>\n\n            <form className=\"form-inline my-2 my-lg-0\">\n              <input\n                className=\"form-control mr-sm-2\"\n                type=\"search\"\n                placeholder=\"Search\"\n              />\n              <button\n                className=\"btn btn-outline-success my-2 my-sm-0\"\n                type=\"submit\"\n              >\n                Search\n              </button>\n            </form>\n          </div>\n        </nav>\n      </section>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport \"./PollDetails.css\";\nimport { Link } from \"react-router-dom\";\nimport ReactSwipe from \"react-swipe\";\nimport { votePoll } from \"../../api.js\";\nimport { getNextPoll } from \"../../api.js\";\n\nclass PollDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: this.props.currentUser,\n      pollItem: this.props.pollItem,\n      voteValue: \"\"\n    };\n  }\n\n  sendVote(voteValue) {\n    this.setState({ voteValue: voteValue });\n    votePoll(this.state).then(\n      getNextPoll(this.state.currentUser._id).then(response => {\n        console.log(\"Next Poll\", response.data);\n        this.setState({ pollItem: response.data });\n      })\n    );\n  }\n\n  render() {\n    const { pollItem } = this.state;\n    return (\n      <section className=\"PollDetails\">\n        <div className=\"card bg-secondary\">\n          <div className=\"card-header\">\n            <h1 className=\"card-title\">{pollItem.title}</h1>\n          </div>\n          <div className=\"card-body\">\n            <h5 className=\"card-subtitle mb-2 text-muted\">\n              {pollItem.createdAt}\n            </h5>\n            <h5 className=\"card-text\">{pollItem.description}</h5>\n\n            <ul className=\"list-group list-group-flush\">\n              <li className=\"list-group-item\">Nb Votants</li>\n              <li className=\"list-group-item\">Nb Verified</li>\n              <li className=\"list-group-item\">Nb Yes</li>\n              <li className=\"list-group-item\">Nb No</li>\n              <li className=\"list-group-item\">Nb Skip</li>\n            </ul>\n            <div className=\"arrow-line\">\n              {/* <Link className=\"vote-link\" to={sendVote(1)}> */}\n              <button onClick={() => this.sendVote(1)}>\n                <h5>\n                  <i className=\"fa fa-arrow-left\" />\n                  YES\n                </h5>\n              </button>\n              {/* </Link> */}\n\n              {/* <Link className=\"vote-link\" to=\"skip-route\"> */}\n              <button onClick={() => this.sendVote(2)}>\n                <h5>\n                  <i className=\"fa fa-arrow-up\" />\n                  SKIP\n                </h5>\n              </button>\n              {/* </Link> */}\n\n              {/* <Link className=\"vote-link\" to=\"skip-route\"> */}\n              <button onClick={() => this.sendVote(0)}>\n                <h5>\n                  NO\n                  <i className=\"fa fa-arrow-right\" />\n                </h5>\n              </button>\n              {/* </Link> */}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default PollDetails;\n","import React, { Component } from \"react\";\nimport ReactSwipe from \"react-swipe\";\nimport \"./PollCarousel.css\";\nimport { getNextPoll } from \"../../api.js\";\nimport NavBar from \"../NavBar.js\";\nimport PollDetails from \"./PollDetails.js\";\nimport Hammer from \"hammerjs\";\n\nclass PollCarousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentUser: this.props.currentUser, pollItem: {} };\n  }\n\n  componentDidMount() {\n    const { currentUser } = this.state;\n    getNextPoll(currentUser._id).then(response => {\n      console.log(\"Next Poll\", response.data);\n      this.setState({ pollItem: response.data });\n    });\n  }\n\n  render() {\n    const { pollItem } = this.state;\n    // let reactSwipeEl;\n    // var hammertime = new Hammer(document.getElementById(\"carousel\"));\n    // hammertime.on(\"pan\", function(ev) {\n    //   console.log(ev);\n    // });\n\n    return (\n      <section className=\"PollCarousel\">\n        <NavBar currentUser={this.state.currentUser} />\n        <ReactSwipe\n          id=\"carousel\"\n          className=\"carousel\"\n          swipeOptions={{ continuous: false }}\n          // ref={el => (reactSwipeEl = el)}\n        >\n          <div>\n            <PollDetails\n              pollItem={pollItem}\n              currentUser={this.state.currentUser}\n            />\n          </div>\n          {/* <div>\n            <PollDetails pollItem={pollItem} />\n          </div>\n          <div>\n            <PollDetails pollItem={pollItem} />\n          </div> */}\n        </ReactSwipe>\n      </section>\n    );\n  }\n}\n\nexport default PollCarousel;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./PopularPolls.css\";\nimport NavBar from \"../NavBar.js\";\nimport { getPollList } from \"../../api.js\";\n\nfunction getPollAddress(poll) {\n  return `/poll-details/${poll._id}`;\n}\n\nclass PopularPolls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { pollArray: [] };\n  }\n\n  componentDidMount() {\n    getPollList().then(response => {\n      console.log(\"Polls List\", response.data);\n      this.setState({ pollArray: response.data });\n    });\n  }\n\n  render() {\n    const { pollArray } = this.state;\n    const { currentUser } = this.props;\n\n    return (\n      <section className=\"PopularPolls\">\n        {/* <header>\n          <NavBar\n            currentUser={this.props.currentUser}\n            logoutConfirmed={() => this.updateUser(null)}\n          />\n        </header> */}\n\n        <h2>Popular Polls</h2>\n\n        <div className=\"card-group\">\n          {pollArray.map(onePoll => {\n            return (\n              <a\n                href={getPollAddress(onePoll)}\n                className=\"card\"\n                key={onePoll._id}\n              >\n                <div className=\"card-header\">{onePoll.shortText}</div>\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <p className=\"card-text\">{onePoll.longText}</p>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-4\">\n                      <p className=\"card-text\">Nb Votants</p>\n                      <p className=\"card-text\">Nb Verified</p>\n                    </div>\n                    <div className=\"col-4\">\n                      <p className=\"card-text\">Yes</p>\n                      <p className=\"card-text\">No</p>\n                      <p className=\"card-text\">Skip</p>\n                    </div>\n                  </div>\n                </div>\n              </a>\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default PopularPolls;\n","import React, { Component } from \"react\";\nimport \"./AddPoll.css\";\nimport { postPoll } from \"../../api.js\";\nimport { Redirect } from \"react-router-dom\";\n// not sure we are currently redirecting | needs to be checked\n\nclass AddPoll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shortText: \"\",\n      longText: \"\",\n      image: \"\",\n      isSubmitSuccessful: false\n    };\n  }\n\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"about to postPoll()\", event);\n    postPoll(this.state).then(response => {\n      console.log(\"Add Poll\", response.data);\n      this.setState({ isSubmitSuccessful: true });\n    });\n  }\n\n  render() {\n    return this.state.isSubmitSuccessful ? (\n      <Redirect to=\"/browse-polls\" />\n    ) : (\n      <section className=\"AddPoll\">\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"pollTitle\">Title</label>\n            <input\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.shortText}\n              name=\"shortText\"\n              type=\"text\"\n              className=\"form-control\"\n              id=\"pollTitle\"\n              placeholder=\"Enter title.\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"pollDesc\">Description</label>\n            <input\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.longText}\n              name=\"longText\"\n              type=\"text\"\n              className=\"form-control\"\n              id=\"pollDesc\"\n              placeholder=\"Enter description.\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"pollImage\">Image URL</label>\n            <input\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.image}\n              name=\"image\"\n              type=\"url\"\n              className=\"form-control\"\n              id=\"pollImage\"\n              placeholder=\"Enter Image URL.\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-info\">\n            Submit This Poll\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default AddPoll;\n","import React, { Component } from \"react\";\n\nimport \"./NotFound.css\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <section className=\"NotFound\">\n        <h2>404 Page Not Found</h2>\n        <p>Sorry, the page you're looking for doesn't exist.</p>\n      </section>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./ProfilePage.css\";\n\nclass ProfilePage extends Component {\n  render() {\n    const { currentUser } = this.props;\n    console.log(\"COUCOU\", currentUser);\n    return !currentUser ? (\n      <Redirect to=\"/\" />\n    ) : (\n      <section className=\"ProfilePage\">\n        <h2>{currentUser.username}</h2>\n        {/* {currentUser.isVerified ? (\n          <p>Your account is verified</p>\n        ) : (\n          <a href=\"/\">Obtain a verified account</a> // change the link\n        )} */}\n        <img\n          src=\"https://pngimage.net/wp-content/uploads/2018/06/profile-logo-png-3.png\"\n          alt={currentUser.username}\n        />\n        <ul>\n          {currentUser.tags.map(oneTag => {\n            return <li>{oneTag}</li>;\n          })}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default ProfilePage;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport HomePage from \"./components/HomePage.js\";\n// import NavBar from \"./components/NavBar.js\";\nimport LoginPage from \"./components/auth/LoginPage.js\";\nimport SignupPage from \"./components/auth/SignupPage.js\";\nimport PollCarousel from \"./components/vote/PollCarousel.js\";\nimport PopularPolls from \"./components/vote/PopularPolls.js\";\nimport AddPoll from \"./components/vote/AddPoll.js\";\nimport PollDetails from \"./components/vote/PollDetails.js\";\nimport NotFound from \"./components/NotFound.js\";\nimport ProfilePage from \"./components/auth/ProfilePage.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let userInfo = localStorage.getItem(\"currentUser\");\n    if (userInfo) {\n      userInfo = JSON.parse(userInfo);\n    }\n    this.state = {\n      currentUser: userInfo\n    };\n  }\n\n  updateUser(newUser) {\n    if (newUser) {\n      //save the user info in localStorage if we are logged IN\n      localStorage.setItem(\"currentUser\", JSON.stringify(newUser));\n    } else {\n      // delete the user info from localStorage if we are logging OUT\n      localStorage.removeItem(\"currentUser\");\n    }\n    this.setState({ currentUser: newUser });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return <HomePage currentUser={this.state.currentUser} />;\n            }}\n          />\n          <Route\n            path=\"/user-profile\"\n            render={() => {\n              return (\n                <ProfilePage\n                  currentUser={this.state.currentUser}\n                  // signupSuccess={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/signup-page\"\n            render={() => {\n              return (\n                <SignupPage\n                  currentUser={this.state.currentUser}\n                  signupSuccess={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/login-page\"\n            render={() => {\n              return (\n                <LoginPage\n                  currentUser={this.state.currentUser}\n                  loginSuccess={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route path=\"/add-poll\" component={AddPoll} />\n          <Route\n            path=\"/poll-carousel\"\n            render={() => {\n              return (\n                <PollCarousel\n                  currentUser={this.state.currentUser}\n                  logoutSuccess={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route path=\"/poll-details/:pollId\" component={PollDetails} />\n          <Route\n            path=\"/popular-polls\"\n            render={() => {\n              return (\n                <PopularPolls\n                  currentUser={this.state.currentUser}\n                  logoutSuccess={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.js\";\nimport \"./index.scss\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}