{"version":3,"sources":["components/HomePage.js","api.js","components/NavBar.js","components/auth/LoginPage.js","components/auth/SignupPage.js","components/vote/PollDetails.js","components/vote/PollCarousel.js","components/vote/PopularPolls.js","components/vote/AddPoll.js","components/NotFound.js","components/auth/ProfilePage.js","components/vote/MyPolls.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","currentUser","this","props","react_default","a","createElement","className","src","alt","username","Link","to","role","Component","backendApi","axios","create","baseURL","process","withCredentials","errorHandler","err","response","data","console","log","getNextPoll","userId","get","concat","catch","votePoll","voteSubmission","post","NavBar","event","_this","preventDefault","then","logoutConfirmed","_this2","NavLink","exact","id","title","type","data-toggle","data-target","onClick","logoutClick","LoginPage","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","originalPassword","_event$target","target","name","value","setState","defineProperty","loginCredentials","loginSuccess","_this3","Redirect","src_components_NavBar","user","onSubmit","handleSubmit","htmlFor","onChange","genericOnChange","placeholder","SignupPage","originalEmail","originalUsercode","errorMessage","tags","userSubmission","signupSuccess","message","PollDetails","voteValue","noPollsAvailable","_this$props","pollItem","reloadPollDetails","errormsg","createdAt","description","sendVote","PollCarousel","_id","touchHandler","Hammer","document","getElementById","set","direction","DIRECTION_ALL","on","ev","_this4","_this$state","lib_default","swipeOptions","continuous","swiping","_this5","components_vote_PollDetails","PopularPolls","pollArray","map","onePoll","key","votes","length","AddPoll","isSubmitSuccessful","pollSubmission","NotFound","ProfilePage","isCertified","oneTag","MyPolls","pollCreatedArray","pollVotedArray","getPollListVotedByUser","App","userInfo","localStorage","getItem","JSON","parse","newUser","setItem","stringify","removeItem","Switch","Route","path","render","src_components_HomePage","components_auth_SignupPage","updateUser","components_auth_LoginPage","components_auth_ProfilePage","components_vote_AddPoll","components_vote_PollCarousel","component","components_vote_PopularPolls","components_vote_MyPolls","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f75251ef.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./HomePage.css\";\nimport { Link } from \"react-router-dom\";\n\nclass HomePage extends Component {\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <section className=\"HomePage\">\n        <h1 className=\"polln-title\">Poll(n)</h1>\n        <img src=\"pollN-logo-img.png\" alt=\"pollN-logo-img\" />\n\n        {currentUser ? (\n          <div>\n            <h2>\n              Welcome <b>{currentUser.username}</b> !\n            </h2>\n            <div>\n              <Link\n                className=\"btn btn-primary\"\n                to=\"/popular-polls\"\n                role=\"button\"\n              >\n                Popular Polls\n              </Link>\n              <Link\n                className=\"btn btn-primary\"\n                to=\"/poll-carousel\"\n                role=\"button\"\n              >\n                Fresh Polls\n              </Link>\n              <Link\n                className=\"btn btn-primary\"\n                to=\"/poll-swiper\"\n                role=\"button\"\n              >\n                Poll Swiper\n              </Link>\n              <Link className=\"btn btn-primary\" to=\"/my-polls\" role=\"button\">\n                My Polls\n              </Link>\n              <Link className=\"btn btn-primary\" to=\"/add-poll\" role=\"button\">\n                Add Poll\n              </Link>\n              <Link\n                className=\"btn btn-primary\"\n                to=\"/user-profile\"\n                role=\"button\"\n              >\n                User Profile\n              </Link>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <p>Welcome to the new instant-polls messaging system!</p>\n            <p>\n              Swipe <i className=\"fa fa-arrow-left\" /> to vote YES\n            </p>\n            <p>\n              Swipe <i className=\"fa fa-arrow-right\" /> to vote NO\n            </p>\n            <p>Double Tap to Skip</p>\n            <div>\n              <Link\n                className=\"btn btn-primary\"\n                to=\"/popular-polls\"\n                role=\"button\"\n              >\n                Popular Polls\n              </Link>\n              <Link className=\"btn btn-primary\" to=\"/signup-page\" role=\"button\">\n                Sign Up\n              </Link>\n              <Link className=\"btn btn-primary\" to=\"/login-page\" role=\"button\">\n                Log In\n              </Link>\n            </div>\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default HomePage;\n","import axios from \"axios\";\n\n// create an Axios object with pre-configured settings\nconst backendApi = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  // send cookies to the backend on every request\n  withCredentials: true\n});\n\nfunction errorHandler(err) {\n  if (err.response && err.response.data) {\n    console.log(\"API Error\", err.response.data);\n  } else {\n    console.log(\"React Code Error\", err.response);\n  }\n  // cause the error again so the .then() won't be called\n  throw err;\n}\n\n// POLL INFORMATION\nexport function getPollList() {\n  return backendApi.get(\"/api/polls\").catch(errorHandler);\n}\n\nexport function getPollListCreatedByUser(userId) {\n  return backendApi\n    .get(`/api/polls-created?userId=${userId}`)\n    .catch(errorHandler);\n}\n\nexport function getPollListVotedByUser(userId) {\n  return backendApi\n    .get(`/api/polls-voted?userId=${userId}`)\n    .catch(errorHandler);\n}\n\nexport function getPollDetails(pollId) {\n  return backendApi.get(`/api/polls/${pollId}`).catch(errorHandler);\n}\n\nexport function getNextPoll(userId) {\n  return backendApi.get(`/api/next-poll?userId=${userId}`).catch(errorHandler);\n}\n\nexport function postPoll(pollSubmission) {\n  return backendApi.post(\"/api/polls\", pollSubmission).catch(errorHandler);\n}\n\nexport function votePoll(voteSubmission) {\n  return backendApi.post(\"/api/vote-poll\", voteSubmission).catch(errorHandler);\n}\n\nexport function getNbYes(pollId) {\n  return backendApi\n    .get(`/api/get-count-yes?pollId=${pollId}`)\n    .catch(errorHandler);\n}\n\n// AUTHENTIFICATION\nexport function postSignUp(userSubmission) {\n  return backendApi\n    .post(\"/api/process-signup\", userSubmission)\n    .catch(errorHandler);\n}\n\nexport function postLogIn(loginCredentials) {\n  return backendApi\n    .post(\"/api/process-login\", loginCredentials)\n    .catch(errorHandler);\n}\n\nexport function getLogOut() {\n  return backendApi.get(\"/api/logout\").catch(errorHandler);\n}\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./NavBar.css\";\nimport { getLogOut } from \"../api.js\";\n\nclass NavBar extends Component {\n  logoutClick(event) {\n    event.preventDefault();\n    getLogOut().then(response => {\n      console.log(\"Log Out OK\", response.data);\n      this.props.logoutConfirmed();\n    });\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <section className=\"NavBar\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <NavLink className=\"navbar-brand polln-title\" exact to=\"/\">\n            Poll(n)\n          </NavLink>\n\n          <div id=\"title\">\n            {this.props.title ? (\n              <div>\n                <h4>{this.props.title}</h4>\n              </div>\n            ) : (\n              <div />\n            )}\n          </div>\n\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/popular-polls\">\n                  Popular Polls\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/poll-carousel\">\n                  Fresh Polls\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/add-poll\">\n                  Add Poll\n                </NavLink>\n              </li>\n\n              {currentUser ? (\n                <li>\n                  <form className=\"form-inline my-2 my-lg-0\">\n                    <NavLink className=\"nav-link\" to=\"/user-profile\">\n                      Username:\n                      <b> {currentUser.username}</b>\n                    </NavLink>\n                    <button\n                      className=\"btn btn-outline-info my-2 my-sm-0\"\n                      onClick={event => this.logoutClick(event)}\n                    >\n                      Log Out\n                    </button>\n                  </form>\n                </li>\n              ) : (\n                <div>\n                  <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/signup-page\">\n                      Sign Up\n                    </NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/login-page\">\n                      Log In\n                    </NavLink>\n                  </li>\n                </div>\n              )}\n            </ul>\n          </div>\n        </nav>\n      </section>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./LoginPage.css\";\nimport { postLogIn } from \"../../api.js\";\nimport NavBar from \"../NavBar.js\";\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      originalPassword: \"\"\n    };\n  }\n\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    postLogIn(this.state).then(response => {\n      console.log(\"Log In\", response.data);\n      this.props.loginSuccess(response.data);\n    });\n  }\n\n  render() {\n    return this.props.currentUser ? (\n      <Redirect to=\"/poll-carousel\" />\n    ) : (\n      <section className=\"LoginPage\">\n        <NavBar\n          currentUser={this.state.currentUser}\n          title=\"Log In\"\n          logoutConfirmed={user => this.props.logoutConfirmed(user)}\n        />\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.username}\n              name=\"username\"\n              type=\"text\"\n              className=\"form-control\"\n              id=\"username\"\n              placeholder=\"Enter username.\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.originalPassword}\n              name=\"originalPassword\"\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              placeholder=\"Enter username.\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Log In\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./SignupPage.css\";\nimport { postSignUp } from \"../../api.js\";\nimport NavBar from \"../NavBar.js\";\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      originalPassword: \"\",\n      originalEmail: \"\",\n      originalUsercode: \"\",\n      errorMessage: \"\",\n      tags: \"\"\n    };\n  }\n\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    console.log(\"TAGS\", this.state.tags);\n\n    event.preventDefault();\n    postSignUp(this.state)\n      .then(response => {\n        this.setState({\n          username: \"\",\n          originalPassword: \"\",\n          originalEmail: \"\",\n          originalUsercode: \"\",\n          errorMessage: \"\",\n          tags: \"\"\n        });\n        console.log(\"Sign Up Result\", response.data);\n        this.props.signupSuccess(response.data);\n      })\n      .catch(err => {\n        this.setState({ errorMessage: err.response.data.message });\n      });\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    return currentUser ? (\n      <Redirect to=\"/\" />\n    ) : (\n      <section className=\"SignupPage\">\n        <NavBar\n          currentUser={this.state.currentUser}\n          title=\"Sign Up\"\n          logoutConfirmed={user => this.props.logoutConfirmed(user)}\n        />\n        <div>\n          {this.state.errorMessage && (\n            <div className=\"error-message\">{this.state.errorMessage}</div>\n          )}\n\n          <form onSubmit={event => this.handleSubmit(event)}>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.username}\n                name=\"username\"\n                type=\"text\"\n                className=\"form-control\"\n                id=\"username\"\n                placeholder=\"Enter username.\"\n              />\n              <small id=\"usernameHelp\" className=\"form-text text-muted\">\n                Make sure this username isn't too easily identifiable.\n              </small>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"tags\">Tags</label>\n              <input\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.tags}\n                name=\"tags\"\n                type=\"text\"\n                className=\"form-control\"\n                id=\"tags\"\n                placeholder=\"Enter tags.\"\n              />\n              <small id=\"tagsHelp\" className=\"form-text text-muted\">\n                Make sure the chosen terms are 'space-separated'.\n              </small>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.originalPassword}\n                name=\"originalPassword\"\n                type=\"password\"\n                className=\"form-control\"\n                id=\"password\"\n                placeholder=\"Password here.\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.originalEmail}\n                name=\"originalEmail\"\n                type=\"email\"\n                className=\"form-control\"\n                id=\"email\"\n                placeholder=\"Email here.\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"usercode\">Social Security Number</label>\n              <input\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.originalUsercode}\n                name=\"originalUsercode\"\n                type=\"text\"\n                className=\"form-control\"\n                id=\"usercode\"\n                placeholder=\"Your Social Security Number here.\"\n              />\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Sign Up\n            </button>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default SignupPage;\n","import React, { Component } from \"react\";\nimport \"./PollDetails.css\";\nimport { votePoll } from \"../../api.js\";\nimport { Redirect } from \"react-router-dom\";\n\nclass PollDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      voteValue: \"\",\n      noPollsAvailable: false\n    };\n  }\n\n  sendVote(voteValue) {\n    const { currentUser, pollItem, reloadPollDetails } = this.props;\n    this.setState({ voteValue });\n    let voteSubmission = { currentUser, pollItem, voteValue };\n    votePoll(voteSubmission).then(() =>\n      reloadPollDetails().then(response => {\n        if (response.data === \"NO POLLS AVAILABLE\") {\n          console.log(\"No Poll Available, will redirect to My Polls now.\");\n          this.setState({ noPollsAvailable: true });\n        }\n        console.log(\"Reloaded Poll Details\", response.data);\n      })\n    );\n  }\n\n  render() {\n    const { pollItem } = this.props;\n    const { noPollsAvailable } = this.state;\n    return noPollsAvailable ? (\n      <Redirect to=\"my-polls\" errormsg=\"No more polls available at the moment. Feel free to add more.\"  />\n    ) : (\n      <section className=\"PollDetails\">\n        <div className=\"card bg-secondary\">\n          <div className=\"card-header\">\n            <h1 className=\"card-title\">{pollItem.title}</h1>\n          </div>\n          <div className=\"card-body\">\n            <h5 className=\"card-subtitle mb-2 text-muted\">\n              {pollItem.createdAt}\n            </h5>\n            <h5 className=\"card-text\">{pollItem.description}</h5>\n\n            <ul className=\"list-group list-group-flush\">\n              <li className=\"list-group-item\">Nb Votants</li>\n              <li className=\"list-group-item\">Nb Verified</li>\n              <li className=\"list-group-item\">Nb Yes</li>\n              <li className=\"list-group-item\">Nb No</li>\n              <li className=\"list-group-item\">Nb Skip</li>\n            </ul>\n            <div className=\"arrow-line\">\n              <button onClick={() => this.sendVote(1)}>\n                <h5>\n                  <i className=\"fa fa-arrow-left\" />\n                  YES\n                </h5>\n              </button>\n\n              <button onClick={() => this.sendVote(2)}>\n                <h5>\n                  <i className=\"fa fa-reply-all\" />\n                  SKIP\n                </h5>\n              </button>\n\n              <button onClick={() => this.sendVote(0)}>\n                <h5>\n                  NO\n                  <i className=\"fa fa-arrow-right\" />\n                </h5>\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default PollDetails;\n","import React, { Component } from \"react\";\nimport \"./PollCarousel.css\";\nimport ReactSwipe from \"react-swipe\";\nimport { votePoll } from \"../../api.js\";\nimport { getNextPoll } from \"../../api.js\";\nimport NavBar from \"../NavBar.js\";\nimport PollDetails from \"./PollDetails.js\";\nimport Hammer from \"hammerjs\";\nimport { Redirect } from \"react-router-dom\";\n\nclass PollCarousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: this.props.currentUser,\n      pollItem: \"YOYOYOY\",\n      noPollsAvailable: false\n    };\n  }\n\n  componentDidMount() {\n    const { currentUser } = this.state;\n\n    getNextPoll(currentUser._id).then(response => {\n      if (response.data === \"NO POLLS AVAILABLE\") {\n        console.log(\"No Poll Available, will redirect to My Polls now.\");\n        this.setState({ noPollsAvailable: true });\n      }\n\n      console.log(\"Next Poll\", response.data);\n      this.setState({ pollItem: response.data });\n    });\n\n    // HAMMER JS ELEMENT THAT WILL CATCH ANY TOUCH INPUT\n    const touchHandler = new Hammer(document.getElementById(\"carousel\"));\n\n    // SWIPE INPUT (ONLY LEFT OR RIGHT), UNUSED AT THE MOMENT SINCE REACT-SWIPE ALREADY HANDLES THESE INPUTS\n    // I'M LEAVING THOSE HERE JUST IN CASE WE NEED IT IN THE FUTURE (ALL THEY DO IS CONSOLE.LOG)\n    touchHandler.get(\"swipe\").set({ direction: Hammer.DIRECTION_ALL });\n    touchHandler.on(\"swipe\", function(ev) {\n      console.log(ev);\n    });\n\n    // ON DOUBLE TAP, WILL VOTE \"2\" TO CURRENT POLL & CALL FOR NEXT POLL TO LOAD\n    touchHandler.on(\"doubletap\", function() {\n      // I'M NOT SURE HOW THIS SHOULD BE CORRECTLY WRITTEN -> basically, what i want is to call the api saying \"here's the vote value from this user to this poll\" & next call the nex-poll api route to retrieve a new poll to display\n      votePoll(2).then(\n        getNextPoll(currentUser._id).then(response => {\n          console.log(\"Next Poll\", response.data);\n          this.setState({ pollItem: response.data });\n        })\n      );\n    });\n  }\n\n  render() {\n    const { currentUser, noPollsAvailable } = this.state;\n\n    return noPollsAvailable ? (\n      <Redirect to=\"my-polls\" errormsg=\"No more polls available at the moment. Feel free to add more.\"  />\n    ) : (\n      <section className=\"PollCarousel\">\n        <NavBar\n          currentUser={this.state.currentUser}\n          title=\"Fresh Polls\"\n          logoutConfirmed={user => this.props.logoutConfirmed(user)}\n        />\n        <ReactSwipe\n          id=\"carousel\"\n          className=\"carousel\"\n          swipeOptions={{\n            continuous: false,\n            swiping: function(ev) {\n              console.log(ev);\n              if (ev > 0.25) {\n                votePoll(1).then(\n                  getNextPoll(currentUser._id).then(response => {\n                    console.log(\"Next Poll\", response.data);\n                    this.setState({ pollItem: response.data });\n                  })\n                );\n              }\n              if (ev < -0.25) {\n                votePoll(0).then(\n                  getNextPoll(currentUser._id).then(response => {\n                    console.log(\"Next Poll\", response.data);\n                    this.setState({ pollItem: response.data });\n                  })\n                );\n              }\n            }\n          }}\n        >\n          <div>\n            <PollDetails\n              pollItem={this.state.pollItem}\n              currentUser={this.state.currentUser}\n              reloadPollDetails={() => getNextPoll(currentUser._id)}\n            />\n          </div>\n        </ReactSwipe>\n      </section>\n    );\n  }\n}\n\nexport default PollCarousel;\n","import React, { Component } from \"react\";\nimport \"./PopularPolls.css\";\nimport NavBar from \"../NavBar.js\";\nimport { getPollList } from \"../../api.js\";\n\nclass PopularPolls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { pollArray: [] };\n  }\n\n  componentDidMount() {\n    getPollList().then(response => {\n      console.log(\"Polls List\", response.data);\n      this.setState({ pollArray: response.data });\n    });\n  }\n\n  render() {\n    const { pollArray } = this.state;\n\n    return (\n      <section className=\"PopularPolls\">\n        <NavBar\n          currentUser={this.props.currentUser}\n          title=\"Popular Polls\"\n          logoutConfirmed={user => this.props.logoutConfirmed(user)}\n        />\n\n        <div className=\"card-group\">\n          {pollArray.map(onePoll => {\n            //onePoll.votes. ==>  nb of YES\n\n            return (\n              <div className=\"card\" key={onePoll._id}>\n                <div className=\"card-header\">\n                  <h5>{onePoll.title}</h5>\n                </div>\n                <div className=\"card-body\">\n                  <div>\n                    <p className=\"card-text\">{onePoll.description}</p>\n                  </div>\n                  <div>\n                    <ul>\n                      <li className=\"card-text\">\n                        {onePoll.votes.length} Voters\n                      </li>\n                      <li className=\"card-text\">Nb Verified</li>\n                      <li className=\"card-text\">Yes</li>\n                      <li className=\"card-text\">No</li>\n                      <li className=\"card-text\">Skip</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default PopularPolls;\n","import React, { Component } from \"react\";\nimport \"./AddPoll.css\";\nimport NavBar from \"../NavBar.js\";\nimport { postPoll } from \"../../api.js\";\nimport { Redirect } from \"react-router-dom\";\n\nclass AddPoll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      isSubmitSuccessful: false,\n      currentUser: this.props.currentUser\n    };\n  }\n\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"About to postPoll()\", event);\n    postPoll(this.state).then(response => {\n      console.log(\"Poll added\", response.data);\n      this.setState({ isSubmitSuccessful: true });\n    });\n  }\n\n  render() {\n    return this.state.isSubmitSuccessful ? (\n      <Redirect to=\"/my-polls\" />\n    ) : (\n      <section className=\"AddPoll\">\n        <NavBar\n          currentUser={this.props.currentUser}\n          title=\"Add Poll\"\n          logoutConfirmed={user => this.props.logoutConfirmed(user)}\n        />\n\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"pollTitle\">Title</label>\n            <input\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.title}\n              name=\"title\"\n              type=\"text\"\n              className=\"form-control\"\n              id=\"pollTitle\"\n              placeholder=\"Enter title.\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"pollDesc\">Description</label>\n            <input\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.description}\n              name=\"description\"\n              type=\"text\"\n              className=\"form-control\"\n              id=\"pollDesc\"\n              placeholder=\"Enter description.\"\n            />\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-info\">\n            Submit This Poll\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default AddPoll;\n","import React, { Component } from \"react\";\n\nimport \"./NotFound.css\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <section className=\"NotFound\">\n        <h2>404 Page Not Found</h2>\n        <p>Sorry, the page you're looking for doesn't exist.</p>\n      </section>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport \"./ProfilePage.css\";\nimport { Redirect } from \"react-router-dom\";\nimport NavBar from \"../NavBar.js\";\n\nclass ProfilePage extends Component {\n  render() {\n    const { currentUser } = this.props;\n    console.log(\"COUCOU\", currentUser);\n    return !currentUser ? (\n      <Redirect to=\"/\" />\n    ) : (\n      <section className=\"ProfilePage\">\n        <NavBar currentUser={this.props.currentUser} title=\"Profile Page\" />\n        <div className=\"user-info\">\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <img\n                src=\"https://pngimage.net/wp-content/uploads/2018/06/profile-logo-png-3.png\"\n                alt={currentUser.username}\n              />\n            </div>\n            <div className=\"col-8\">\n              <p>\n                Username: <b>{currentUser.username}</b>\n              </p>\n              {currentUser.isCertified ? (\n                <p>Your account is certified</p>\n              ) : (\n                <p>Insert valid Usercode to get certified</p>\n              )}\n            </div>\n          </div>\n          <div className=\"tag-list\">\n            <p>List of associated tags :</p>\n            <ul>\n              {currentUser.tags.map(oneTag => {\n                return (\n                  <li>\n                    <p>\n                      <b>{oneTag}</b>\n                    </p>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ProfilePage;\n","import React, { Component } from \"react\";\nimport \"./MyPolls.css\";\nimport NavBar from \"../NavBar.js\";\nimport { getPollListCreatedByUser } from \"../../api.js\";\nimport { getPollListVotedByUser } from \"../../api.js\";\n\nimport { getNbYes } from \"../../api.js\";\n\nclass MyPolls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pollCreatedArray: [],\n      pollVotedArray: []\n    };\n  }\n\n  componentDidMount() {\n    getPollListCreatedByUser(this.props.currentUser._id).then(response => {\n      console.log(\"Polls Created List\", response.data);\n      this.setState({ pollCreatedArray: response.data });\n    });\n    getPollListVotedByUser(this.props.currentUser._id).then(response => {\n      console.log(\"Polls Voted List\", response.data);\n      this.setState({ pollVotedArray: response.data });\n    });\n  }\n\n  render() {\n    const { pollCreatedArray, pollVotedArray } = this.state;\n\n    return (\n      <section className=\"MyPolls\">\n        <NavBar\n          currentUser={this.props.currentUser}\n          title=\"My Polls\"\n          logoutConfirmed={user => this.props.logoutConfirmed(user)}\n        />\n\n        {this.props.errormsg ? (\n          <div>\n            <h4>{this.props.errormsg}</h4>\n          </div>\n        ) : (\n          <div />\n        )}\n\n        <p>Polls I've Created</p>\n        <div className=\"card-group\">\n          {pollCreatedArray.map(onePoll => {\n            return (\n              <div className=\"card\" key={onePoll._id}>\n                <div className=\"card-header\">\n                  <h5>{onePoll.title}</h5>\n                </div>\n                <div className=\"card-body\">\n                  <div>\n                    <h6 className=\"card-text\">{onePoll.description}</h6>\n                  </div>\n                  <ul>\n                    <li className=\"card-text\">\n                      <b>{onePoll.votes.length}</b> Voters\n                    </li>\n                    <li className=\"card-text\">\n                      <b>0</b> Verified\n                    </li>\n                    <li className=\"card-text\">Yes</li>\n                    <li className=\"card-text\">No</li>\n                    <li className=\"card-text\">Skip</li>\n                  </ul>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <p>Polls I've Voted</p>\n        <div className=\"card-group\">\n          {pollVotedArray.map(onePoll => {\n            return (\n              <div className=\"card\" key={onePoll._id}>\n                <div className=\"card-header\">\n                  <h5>{onePoll.title}</h5>\n                </div>\n                <div className=\"card-body\">\n                  <div>\n                    <h6 className=\"card-text\">{onePoll.description}</h6>\n                  </div>\n                  <ul>\n                    <li className=\"card-text\">\n                      <b>{onePoll.votes.length}</b> Voters\n                    </li>\n                    <li className=\"card-text\">\n                      <b>0</b> Verified\n                    </li>\n                    {/* <li className=\"card-text\">{getNbYes(onePoll._id)} Yes</li> */}\n                    <li className=\"card-text\">No</li>\n                    <li className=\"card-text\">Skip</li>\n                  </ul>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default MyPolls;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport HomePage from \"./components/HomePage.js\";\nimport LoginPage from \"./components/auth/LoginPage.js\";\nimport SignupPage from \"./components/auth/SignupPage.js\";\nimport PollCarousel from \"./components/vote/PollCarousel.js\";\nimport PopularPolls from \"./components/vote/PopularPolls.js\";\nimport AddPoll from \"./components/vote/AddPoll.js\";\nimport PollDetails from \"./components/vote/PollDetails.js\";\nimport NotFound from \"./components/NotFound.js\";\nimport ProfilePage from \"./components/auth/ProfilePage.js\";\nimport MyPolls from \"./components/vote/MyPolls.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let userInfo = localStorage.getItem(\"currentUser\");\n    if (userInfo) {\n      userInfo = JSON.parse(userInfo);\n    }\n    this.state = {\n      currentUser: userInfo\n    };\n  }\n\n  updateUser(newUser) {\n    if (newUser) {\n      //save the user info in localStorage if we are logged IN\n      localStorage.setItem(\"currentUser\", JSON.stringify(newUser));\n    } else {\n      // delete the user info from localStorage if we are logging OUT\n      localStorage.removeItem(\"currentUser\");\n    }\n    this.setState({ currentUser: newUser });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return <HomePage currentUser={this.state.currentUser} />;\n            }}\n          />\n          <Route\n            path=\"/signup-page\"\n            render={() => {\n              return (\n                <SignupPage\n                  currentUser={this.state.currentUser}\n                  signupSuccess={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/login-page\"\n            render={() => {\n              return (\n                <LoginPage\n                  currentUser={this.state.currentUser}\n                  loginSuccess={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/user-profile\"\n            render={() => {\n              return <ProfilePage currentUser={this.state.currentUser} />;\n            }}\n          />\n          <Route\n            path=\"/add-poll\"\n            render={() => {\n              return (\n                <AddPoll\n                  currentUser={this.state.currentUser}\n                  logoutConfirmed={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/poll-carousel\"\n            render={() => {\n              return (\n                <PollCarousel\n                  currentUser={this.state.currentUser}\n                  logoutConfirmed={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route path=\"/poll-details/:pollId\" component={PollDetails} />\n          <Route\n            path=\"/popular-polls\"\n            render={() => {\n              return (\n                <PopularPolls\n                  currentUser={this.state.currentUser}\n                  logoutConfirmed={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/my-polls\"\n            render={() => {\n              return (\n                <MyPolls\n                  currentUser={this.state.currentUser}\n                  logoutConfirmed={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.js\";\nimport \"./index.scss\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}