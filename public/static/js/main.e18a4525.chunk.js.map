{"version":3,"sources":["components/HomePage.js","api.js","components/NavBar.js","components/auth/LoginPage.js","components/auth/SignupPage.js","components/vote/PollDetails.js","components/vote/PollCarousel.js","components/vote/PopularPolls.js","components/vote/AddPoll.js","components/NotFound.js","components/auth/ProfilePage.js","components/vote/MyPolls.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","currentUser","this","props","react_default","a","createElement","className","src","alt","username","Link","to","role","Component","backendApi","axios","create","baseURL","process","REACT_APP_BACKEND_URL","withCredentials","errorHandler","err","response","data","console","log","getNextPoll","userId","get","concat","catch","votePoll","voteSubmission","post","NavBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","event","logoutConfirmed","preventDefault","then","_this2","NavLink","exact","id","title","type","data-toggle","data-target","onClick","logoutClick","LoginPage","originalPassword","_event$target","target","name","value","setState","defineProperty","loginCredentials","loginSuccess","_this3","Redirect","src_components_NavBar","user","onSubmit","handleSubmit","htmlFor","onChange","genericOnChange","placeholder","SignupPage","originalEmail","originalUsercode","errorMessage","tags","userSubmission","signupSuccess","message","PollDetails","voteValue","noPollsAvailable","_this$props","pollItem","reloadPollDetails","errormsg","createdAt","description","sendVote","PollCarousel","_id","Hammer","document","getElementById","on","_this$state","lib_default","swipeOptions","continuous","swiping","ev","_this4","components_vote_PollDetails","PopularPolls","pollArray","map","onePoll","key","votes","length","AddPoll","isSubmitSuccessful","pollSubmission","NotFound","ProfilePage","isCertified","oneTag","MyPolls","pollCreatedArray","pollVotedArray","getPollListVotedByUser","App","userInfo","localStorage","getItem","JSON","parse","newUser","setItem","stringify","removeItem","Switch","Route","path","render","src_components_HomePage","components_auth_SignupPage","updateUser","components_auth_LoginPage","components_auth_ProfilePage","components_vote_AddPoll","components_vote_PollCarousel","component","components_vote_PopularPolls","components_vote_MyPolls","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e18a4525.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./HomePage.css\";\nimport { Link } from \"react-router-dom\";\n\nclass HomePage extends Component {\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <section className=\"HomePage\">\n        <h1 className=\"polln-title\">Poll(n)</h1>\n        <img src=\"pollN-logo-img.png\" alt=\"pollN-logo-img\" />\n\n        {currentUser ? (\n          <div>\n            <h2>\n              Welcome <b>{currentUser.username}</b> !\n            </h2>\n            <div>\n              <Link\n                className=\"btn btn-primary\"\n                to=\"/popular-polls\"\n                role=\"button\"\n              >\n                Popular Polls\n              </Link>\n              <Link\n                className=\"btn btn-primary\"\n                to=\"/poll-carousel\"\n                role=\"button\"\n              >\n                Fresh Polls\n              </Link>\n              <Link\n                className=\"btn btn-primary\"\n                to=\"/poll-swiper\"\n                role=\"button\"\n              >\n                Poll Swiper\n              </Link>\n              <Link className=\"btn btn-primary\" to=\"/my-polls\" role=\"button\">\n                My Polls\n              </Link>\n              <Link className=\"btn btn-primary\" to=\"/add-poll\" role=\"button\">\n                Add Poll\n              </Link>\n              <Link\n                className=\"btn btn-primary\"\n                to=\"/user-profile\"\n                role=\"button\"\n              >\n                User Profile\n              </Link>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <p>Welcome to the new instant-polls messaging system!</p>\n            <p>\n              Swipe <i className=\"fa fa-arrow-left\" /> to vote YES\n            </p>\n            <p>\n              Swipe <i className=\"fa fa-arrow-right\" /> to vote NO\n            </p>\n            <p>Double Tap to Skip</p>\n            <div>\n              <Link\n                className=\"btn btn-primary\"\n                to=\"/popular-polls\"\n                role=\"button\"\n              >\n                Popular Polls\n              </Link>\n              <Link className=\"btn btn-primary\" to=\"/signup-page\" role=\"button\">\n                Sign Up\n              </Link>\n              <Link className=\"btn btn-primary\" to=\"/login-page\" role=\"button\">\n                Log In\n              </Link>\n            </div>\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default HomePage;\n","import axios from \"axios\";\n\n// create an Axios object with pre-configured settings\nconst backendApi = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  // send cookies to the backend on every request\n  withCredentials: true\n});\n\nfunction errorHandler(err) {\n  if (err.response && err.response.data) {\n    console.log(\"API Error\", err.response.data);\n  } else {\n    console.log(\"React Code Error\", err.response);\n  }\n  // cause the error again so the .then() won't be called\n  throw err;\n}\n\n// POLL INFORMATION\nexport function getPollList() {\n  return backendApi.get(\"/api/polls\").catch(errorHandler);\n}\n\nexport function getPollListCreatedByUser(userId) {\n  return backendApi\n    .get(`/api/polls-created?userId=${userId}`)\n    .catch(errorHandler);\n}\n\nexport function getPollListVotedByUser(userId) {\n  return backendApi\n    .get(`/api/polls-voted?userId=${userId}`)\n    .catch(errorHandler);\n}\n\nexport function getPollDetails(pollId) {\n  return backendApi.get(`/api/polls/${pollId}`).catch(errorHandler);\n}\n\nexport function getNextPoll(userId) {\n  return backendApi.get(`/api/next-poll?userId=${userId}`).catch(errorHandler);\n}\n\nexport function postPoll(pollSubmission) {\n  return backendApi.post(\"/api/polls\", pollSubmission).catch(errorHandler);\n}\n\nexport function votePoll(voteSubmission) {\n  return backendApi.post(\"/api/vote-poll\", voteSubmission).catch(errorHandler);\n}\n\nexport function getNbYes(pollId) {\n  return backendApi\n    .get(`/api/get-count-yes?pollId=${pollId}`)\n    .catch(errorHandler);\n}\n\n// AUTHENTIFICATION\nexport function postSignUp(userSubmission) {\n  return backendApi\n    .post(\"/api/process-signup\", userSubmission)\n    .catch(errorHandler);\n}\n\nexport function postLogIn(loginCredentials) {\n  return backendApi\n    .post(\"/api/process-login\", loginCredentials)\n    .catch(errorHandler);\n}\n\nexport function getLogOut() {\n  return backendApi.get(\"/api/logout\").catch(errorHandler);\n}\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./NavBar.css\";\nimport { getLogOut } from \"../api.js\";\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  logoutClick(event) {\n    const { logoutConfirmed } = this.props;\n    event.preventDefault();\n    getLogOut().then(response => {\n      console.log(\"Log Out OK\", response.data);\n      logoutConfirmed();\n    });\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <section className=\"NavBar\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <NavLink className=\"navbar-brand polln-title\" exact to=\"/\">\n            Poll(n)\n          </NavLink>\n\n          <div id=\"title\">\n            {this.props.title ? (\n              <div>\n                <h4>{this.props.title}</h4>\n              </div>\n            ) : (\n              <div />\n            )}\n          </div>\n\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/popular-polls\">\n                  Popular Polls\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/poll-carousel\">\n                  Fresh Polls\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/add-poll\">\n                  Add Poll\n                </NavLink>\n              </li>\n\n              {currentUser ? (\n                <li>\n                  <form className=\"form-inline my-2 my-lg-0\">\n                    <NavLink className=\"nav-link\" to=\"/user-profile\">\n                      Username:\n                      <b> {currentUser.username}</b>\n                    </NavLink>\n                    <button\n                      className=\"btn btn-outline-info my-2 my-sm-0\"\n                      onClick={event => this.logoutClick(event)}\n                    >\n                      Log Out\n                    </button>\n                  </form>\n                </li>\n              ) : (\n                <div>\n                  <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/signup-page\">\n                      Sign Up\n                    </NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/login-page\">\n                      Log In\n                    </NavLink>\n                  </li>\n                </div>\n              )}\n            </ul>\n          </div>\n        </nav>\n      </section>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./LoginPage.css\";\nimport { postLogIn } from \"../../api.js\";\nimport NavBar from \"../NavBar.js\";\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      originalPassword: \"\"\n    };\n  }\n\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    postLogIn(this.state).then(response => {\n      console.log(\"Log In\", response.data);\n      this.props.loginSuccess(response.data);\n    });\n  }\n\n  render() {\n    return this.props.currentUser ? (\n      <Redirect to=\"/poll-carousel\" />\n    ) : (\n      <section className=\"LoginPage\">\n        <NavBar\n          currentUser={this.state.currentUser}\n          title=\"Log In\"\n          logoutConfirmed={user => this.props.logoutConfirmed(user)}\n        />\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.username}\n              name=\"username\"\n              type=\"text\"\n              className=\"form-control\"\n              id=\"username\"\n              placeholder=\"Enter username.\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.originalPassword}\n              name=\"originalPassword\"\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              placeholder=\"Enter username.\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Log In\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./SignupPage.css\";\nimport { postSignUp } from \"../../api.js\";\nimport NavBar from \"../NavBar.js\";\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      originalPassword: \"\",\n      originalEmail: \"\",\n      originalUsercode: \"\",\n      errorMessage: \"\",\n      tags: \"\"\n    };\n  }\n\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    console.log(\"TAGS\", this.state.tags);\n\n    event.preventDefault();\n    postSignUp(this.state)\n      .then(response => {\n        this.setState({\n          username: \"\",\n          originalPassword: \"\",\n          originalEmail: \"\",\n          originalUsercode: \"\",\n          errorMessage: \"\",\n          tags: \"\"\n        });\n        console.log(\"Sign Up Result\", response.data);\n        this.props.signupSuccess(response.data);\n      })\n      .catch(err => {\n        this.setState({ errorMessage: err.response.data.message });\n      });\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    return currentUser ? (\n      <Redirect to=\"/\" />\n    ) : (\n      <section className=\"SignupPage\">\n        <NavBar\n          currentUser={this.state.currentUser}\n          title=\"Sign Up\"\n          logoutConfirmed={user => this.props.logoutConfirmed(user)}\n        />\n        <div>\n          {this.state.errorMessage && (\n            <div className=\"error-message\">{this.state.errorMessage}</div>\n          )}\n\n          <form onSubmit={event => this.handleSubmit(event)}>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.username}\n                name=\"username\"\n                type=\"text\"\n                className=\"form-control\"\n                id=\"username\"\n                placeholder=\"Enter username.\"\n              />\n              <small id=\"usernameHelp\" className=\"form-text text-muted\">\n                Make sure this username isn't too easily identifiable.\n              </small>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"tags\">Tags</label>\n              <input\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.tags}\n                name=\"tags\"\n                type=\"text\"\n                className=\"form-control\"\n                id=\"tags\"\n                placeholder=\"Enter tags.\"\n              />\n              <small id=\"tagsHelp\" className=\"form-text text-muted\">\n                Make sure the chosen terms are 'space-separated'.\n              </small>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.originalPassword}\n                name=\"originalPassword\"\n                type=\"password\"\n                className=\"form-control\"\n                id=\"password\"\n                placeholder=\"Password here.\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.originalEmail}\n                name=\"originalEmail\"\n                type=\"email\"\n                className=\"form-control\"\n                id=\"email\"\n                placeholder=\"Email here.\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"usercode\">Social Security Number</label>\n              <input\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.originalUsercode}\n                name=\"originalUsercode\"\n                type=\"text\"\n                className=\"form-control\"\n                id=\"usercode\"\n                placeholder=\"Your Social Security Number here.\"\n              />\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Sign Up\n            </button>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default SignupPage;\n","import React, { Component } from \"react\";\nimport \"./PollDetails.css\";\nimport { votePoll } from \"../../api.js\";\nimport { Redirect } from \"react-router-dom\";\n\nclass PollDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      voteValue: \"\",\n      noPollsAvailable: false\n    };\n  }\n\n  sendVote(voteValue) {\n    const { currentUser, pollItem, reloadPollDetails } = this.props;\n    this.setState({ voteValue });\n    let voteSubmission = { currentUser, pollItem, voteValue };\n    votePoll(voteSubmission).then(() =>\n      reloadPollDetails().then(response => {\n        if (response.data === \"NO POLLS AVAILABLE\") {\n          console.log(\"No Poll Available, will redirect to My Polls now.\");\n          this.setState({ noPollsAvailable: true });\n        }\n        console.log(\"Reloaded Poll Details\", response.data);\n      })\n    );\n  }\n\n  render() {\n    const { pollItem } = this.props;\n    const { noPollsAvailable } = this.state;\n    return noPollsAvailable ? (\n      <Redirect\n        to=\"my-polls\"\n        errormsg=\"No more polls available at the moment. Feel free to add more.\"\n      />\n    ) : (\n      <section className=\"PollDetails\">\n        <div className=\"card bg-secondary\">\n          <div className=\"card-header\">\n            <h1 className=\"card-title\">{pollItem.title}</h1>\n          </div>\n          <div className=\"card-body\">\n            <h5 className=\"card-subtitle mb-2 text-muted\">\n              {pollItem.createdAt}\n            </h5>\n            <h5 className=\"card-text\">{pollItem.description}</h5>\n\n            <ul className=\"list-group list-group-flush\">\n              <li className=\"list-group-item\">Nb Votants</li>\n              <li className=\"list-group-item\">Nb Verified</li>\n              <li className=\"list-group-item\">Nb Yes</li>\n              <li className=\"list-group-item\">Nb No</li>\n              <li className=\"list-group-item\">Nb Skip</li>\n            </ul>\n            <div className=\"arrow-line\">\n              <button onClick={() => this.sendVote(1)}>\n                <h5>\n                  <i className=\"fa fa-arrow-left\" />\n                  YES\n                </h5>\n              </button>\n\n              <button onClick={() => this.sendVote(2)}>\n                <h5>\n                  <i className=\"fa fa-reply-all\" />\n                  SKIP\n                </h5>\n              </button>\n\n              <button onClick={() => this.sendVote(0)}>\n                <h5>\n                  NO\n                  <i className=\"fa fa-arrow-right\" />\n                </h5>\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default PollDetails;\n","import React, { Component } from \"react\";\nimport \"./PollCarousel.css\";\nimport ReactSwipe from \"react-swipe\";\nimport { votePoll } from \"../../api.js\";\nimport { getNextPoll } from \"../../api.js\";\nimport NavBar from \"../NavBar.js\";\nimport PollDetails from \"./PollDetails.js\";\nimport Hammer from \"hammerjs\";\nimport { Redirect } from \"react-router-dom\";\n\nclass PollCarousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: {},\n      pollItem: {},\n      noPollsAvailable: false\n    };\n  }\n\n  componentDidMount() {\n    const { currentUser } = this.props;\n\n    getNextPoll(currentUser._id).then(response => {\n      if (response.data === \"NO POLLS AVAILABLE\") {\n        console.log(\"No Poll Available, will redirect to My Polls now.\");\n        this.setState({ noPollsAvailable: true });\n      }\n\n      console.log(\"Next Poll\", response.data);\n      this.setState({ pollItem: response.data });\n    });\n\n    // HAMMER JS ELEMENT THAT WILL CATCH ANY TOUCH INPUT\n    const touchHandler = new Hammer(document.getElementById(\"carousel\"));\n\n    // SWIPE INPUT (ONLY LEFT OR RIGHT), UNUSED AT THE MOMENT SINCE REACT-SWIPE ALREADY HANDLES THESE INPUTS\n    // I'M LEAVING THOSE HERE JUST IN CASE WE NEED IT IN THE FUTURE (ALL THEY DO IS CONSOLE.LOG)\n    // touchHandler.get(\"swipe\").set({ direction: Hammer.DIRECTION_ALL });\n    // touchHandler.on(\"swipe\", function(ev) {\n    //   console.log(ev);\n    // });\n\n    // ON DOUBLE TAP, WILL VOTE \"2\" TO CURRENT POLL & CALL FOR NEXT POLL TO LOAD\n    touchHandler.on(\"doubletap\", function() {\n      const { currentUser } = this.props;\n      const { pollItem } = this.state;\n      let voteValue = 2;\n      let voteSubmission = { currentUser, pollItem, voteValue };\n      votePoll(voteSubmission).then(\n        getNextPoll(currentUser._id).then(response => {\n          if (response.data === \"NO POLLS AVAILABLE\") {\n            console.log(\"No Poll Available, will redirect to My Polls now.\");\n            this.setState({ noPollsAvailable: true });\n          }\n          console.log(\"Next Poll\", response.data);\n          this.setState({ pollItem: response.data });\n        })\n      );\n    });\n  }\n\n  render() {\n    const { currentUser, logoutConfirmed } = this.props;\n    const { pollItem, noPollsAvailable } = this.state;\n\n    return noPollsAvailable ? (\n      <Redirect\n        to=\"my-polls\"\n        errormsg=\"No more polls available at the moment. Feel free to add more.\"\n      />\n    ) : (\n      <section className=\"PollCarousel\">\n        <NavBar\n          currentUser={currentUser}\n          title=\"Fresh Polls\"\n          logoutConfirmed={user => logoutConfirmed(user)}\n        />\n        <ReactSwipe\n          id=\"carousel\"\n          className=\"carousel\"\n          swipeOptions={{\n            continuous: false,\n            swiping: function(ev) {\n              console.log(ev);\n              if (ev > 0.25) {\n                let voteValue = 1;\n                let voteSubmission = { currentUser, pollItem, voteValue };\n                votePoll(voteSubmission).then(\n                  getNextPoll(currentUser._id).then(response => {\n                    if (response.data === \"NO POLLS AVAILABLE\") {\n                      console.log(\n                        \"No Poll Available, will redirect to My Polls now.\"\n                      );\n                      this.setState({ noPollsAvailable: true });\n                    }\n                    console.log(\"Next Poll\", response.data);\n                    this.setState({ pollItem: response.data });\n                  })\n                );\n              }\n              if (ev < -0.25) {\n                let voteValue = 0;\n                let voteSubmission = { currentUser, pollItem, voteValue };\n                votePoll(voteSubmission).then(\n                  getNextPoll(currentUser._id).then(response => {\n                    if (response.data === \"NO POLLS AVAILABLE\") {\n                      console.log(\n                        \"No Poll Available, will redirect to My Polls now.\"\n                      );\n                      this.setState({ noPollsAvailable: true });\n                    }\n                    console.log(\"Next Poll\", response.data);\n                    this.setState({ pollItem: response.data });\n                  })\n                );\n              }\n            }\n          }}\n        >\n          <div>\n            <PollDetails\n              pollItem={pollItem}\n              currentUser={currentUser}\n              reloadPollDetails={() => getNextPoll(currentUser._id)}\n            />\n          </div>\n        </ReactSwipe>\n      </section>\n    );\n  }\n}\n\nexport default PollCarousel;\n","import React, { Component } from \"react\";\nimport \"./PopularPolls.css\";\nimport NavBar from \"../NavBar.js\";\nimport { getPollList } from \"../../api.js\";\n\nclass PopularPolls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { pollArray: [] };\n  }\n\n  componentDidMount() {\n    getPollList().then(response => {\n      console.log(\"Polls List\", response.data);\n      this.setState({ pollArray: response.data });\n    });\n  }\n\n  render() {\n    const { pollArray } = this.state;\n\n    return (\n      <section className=\"PopularPolls\">\n        <NavBar\n          currentUser={this.props.currentUser}\n          title=\"Popular Polls\"\n          logoutConfirmed={user => this.props.logoutConfirmed(user)}\n        />\n\n        <div className=\"card-group\">\n          {pollArray.map(onePoll => {\n            //onePoll.votes. ==>  nb of YES\n\n            return (\n              <div className=\"card\" key={onePoll._id}>\n                <div className=\"card-header\">\n                  <h5>{onePoll.title}</h5>\n                </div>\n                <div className=\"card-body\">\n                  <div>\n                    <p className=\"card-text\">{onePoll.description}</p>\n                  </div>\n                  <div>\n                    <ul>\n                      <li className=\"card-text\">\n                        {onePoll.votes.length} Voters\n                      </li>\n                      <li className=\"card-text\">Nb Verified</li>\n                      <li className=\"card-text\">Yes</li>\n                      <li className=\"card-text\">No</li>\n                      <li className=\"card-text\">Skip</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default PopularPolls;\n","import React, { Component } from \"react\";\nimport \"./AddPoll.css\";\nimport NavBar from \"../NavBar.js\";\nimport { postPoll } from \"../../api.js\";\nimport { Redirect } from \"react-router-dom\";\n\nclass AddPoll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      isSubmitSuccessful: false,\n      currentUser: this.props.currentUser\n    };\n  }\n\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"About to postPoll()\", event);\n    postPoll(this.state).then(response => {\n      console.log(\"Poll added\", response.data);\n      this.setState({ isSubmitSuccessful: true });\n    });\n  }\n\n  render() {\n    return this.state.isSubmitSuccessful ? (\n      <Redirect to=\"/my-polls\" />\n    ) : (\n      <section className=\"AddPoll\">\n        <NavBar\n          currentUser={this.props.currentUser}\n          title=\"Add Poll\"\n          logoutConfirmed={user => this.props.logoutConfirmed(user)}\n        />\n\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"pollTitle\">Title</label>\n            <input\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.title}\n              name=\"title\"\n              type=\"text\"\n              className=\"form-control\"\n              id=\"pollTitle\"\n              placeholder=\"Enter title.\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"pollDesc\">Description</label>\n            <input\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.description}\n              name=\"description\"\n              type=\"text\"\n              className=\"form-control\"\n              id=\"pollDesc\"\n              placeholder=\"Enter description.\"\n            />\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-info\">\n            Submit This Poll\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default AddPoll;\n","import React, { Component } from \"react\";\n\nimport \"./NotFound.css\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <section className=\"NotFound\">\n        <h2>404 Page Not Found</h2>\n        <p>Sorry, the page you're looking for doesn't exist.</p>\n      </section>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport \"./ProfilePage.css\";\nimport { Redirect } from \"react-router-dom\";\nimport NavBar from \"../NavBar.js\";\n\nclass ProfilePage extends Component {\n  render() {\n    const { currentUser, logoutConfirmed } = this.props;\n    return !currentUser ? (\n      <Redirect to=\"/\" />\n    ) : (\n      <section className=\"ProfilePage\">\n        <NavBar\n          currentUser={currentUser}\n          title=\"Profile Page\"\n          logoutConfirmed={user => logoutConfirmed(user)}\n        />\n        <div className=\"user-info\">\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <img\n                src=\"https://pngimage.net/wp-content/uploads/2018/06/profile-logo-png-3.png\"\n                alt={currentUser.username}\n              />\n            </div>\n            <div className=\"col-8\">\n              <p>\n                Username: <b>{currentUser.username}</b>\n              </p>\n              {currentUser.isCertified ? (\n                <p>Your account is certified</p>\n              ) : (\n                <p>Insert valid Usercode to get certified</p>\n              )}\n            </div>\n          </div>\n          <div className=\"tag-list\">\n            <p>List of associated tags :</p>\n            <ul>\n              {currentUser.tags.map(oneTag => {\n                return (\n                  <li>\n                    <p>\n                      <b>{oneTag}</b>\n                    </p>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ProfilePage;\n","import React, { Component } from \"react\";\nimport \"./MyPolls.css\";\nimport NavBar from \"../NavBar.js\";\nimport { getPollListCreatedByUser } from \"../../api.js\";\nimport { getPollListVotedByUser } from \"../../api.js\";\n\nimport { getNbYes } from \"../../api.js\";\n\nclass MyPolls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pollCreatedArray: [],\n      pollVotedArray: []\n    };\n  }\n\n  componentDidMount() {\n    getPollListCreatedByUser(this.props.currentUser._id).then(response => {\n      console.log(\"Polls Created List\", response.data);\n      this.setState({ pollCreatedArray: response.data });\n    });\n    getPollListVotedByUser(this.props.currentUser._id).then(response => {\n      console.log(\"Polls Voted List\", response.data);\n      this.setState({ pollVotedArray: response.data });\n    });\n  }\n\n  render() {\n    const { pollCreatedArray, pollVotedArray } = this.state;\n\n    return (\n      <section className=\"MyPolls\">\n        <NavBar\n          currentUser={this.props.currentUser}\n          title=\"My Polls\"\n          logoutConfirmed={user => this.props.logoutConfirmed(user)}\n        />\n\n        {this.props.errormsg ? (\n          <div>\n            <h4>{this.props.errormsg}</h4>\n          </div>\n        ) : (\n          <div />\n        )}\n\n        <p>Polls I've Created</p>\n        <div className=\"card-group\">\n          {pollCreatedArray.map(onePoll => {\n            return (\n              <div className=\"card\" key={onePoll._id}>\n                <div className=\"card-header\">\n                  <h5>{onePoll.title}</h5>\n                </div>\n                <div className=\"card-body\">\n                  <div>\n                    <h6 className=\"card-text\">{onePoll.description}</h6>\n                  </div>\n                  <ul>\n                    <li className=\"card-text\">\n                      <b>{onePoll.votes.length}</b> Voters\n                    </li>\n                    <li className=\"card-text\">\n                      <b>0</b> Verified\n                    </li>\n                    <li className=\"card-text\">Yes</li>\n                    <li className=\"card-text\">No</li>\n                    <li className=\"card-text\">Skip</li>\n                  </ul>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <p>Polls I've Voted</p>\n        <div className=\"card-group\">\n          {pollVotedArray.map(onePoll => {\n            return (\n              <div className=\"card\" key={onePoll._id}>\n                <div className=\"card-header\">\n                  <h5>{onePoll.title}</h5>\n                </div>\n                <div className=\"card-body\">\n                  <div>\n                    <h6 className=\"card-text\">{onePoll.description}</h6>\n                  </div>\n                  <ul>\n                    <li className=\"card-text\">\n                      <b>{onePoll.votes.length}</b> Voters\n                    </li>\n                    <li className=\"card-text\">\n                      <b>0</b> Verified\n                    </li>\n                    {/* <li className=\"card-text\">{getNbYes(onePoll._id)} Yes</li> */}\n                    <li className=\"card-text\">No</li>\n                    <li className=\"card-text\">Skip</li>\n                  </ul>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default MyPolls;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport HomePage from \"./components/HomePage.js\";\nimport LoginPage from \"./components/auth/LoginPage.js\";\nimport SignupPage from \"./components/auth/SignupPage.js\";\nimport PollCarousel from \"./components/vote/PollCarousel.js\";\nimport PopularPolls from \"./components/vote/PopularPolls.js\";\nimport AddPoll from \"./components/vote/AddPoll.js\";\nimport PollDetails from \"./components/vote/PollDetails.js\";\nimport NotFound from \"./components/NotFound.js\";\nimport ProfilePage from \"./components/auth/ProfilePage.js\";\nimport MyPolls from \"./components/vote/MyPolls.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let userInfo = localStorage.getItem(\"currentUser\");\n    if (userInfo) {\n      userInfo = JSON.parse(userInfo);\n    }\n    this.state = {\n      currentUser: userInfo\n    };\n  }\n\n  updateUser(newUser) {\n    if (newUser) {\n      //save the user info in localStorage if we are logged IN\n      localStorage.setItem(\"currentUser\", JSON.stringify(newUser));\n    } else {\n      // delete the user info from localStorage if we are logging OUT\n      localStorage.removeItem(\"currentUser\");\n    }\n    this.setState({ currentUser: newUser });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return <HomePage currentUser={this.state.currentUser} />;\n            }}\n          />\n          <Route\n            path=\"/signup-page\"\n            render={() => {\n              return (\n                <SignupPage\n                  currentUser={this.state.currentUser}\n                  signupSuccess={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/login-page\"\n            render={() => {\n              return (\n                <LoginPage\n                  currentUser={this.state.currentUser}\n                  loginSuccess={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/user-profile\"\n            render={() => {\n              return <ProfilePage currentUser={this.state.currentUser} />;\n            }}\n          />\n          <Route\n            path=\"/add-poll\"\n            render={() => {\n              return (\n                <AddPoll\n                  currentUser={this.state.currentUser}\n                  logoutConfirmed={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/poll-carousel\"\n            render={() => {\n              return (\n                <PollCarousel\n                  currentUser={this.state.currentUser}\n                  logoutConfirmed={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route path=\"/poll-details/:pollId\" component={PollDetails} />\n          <Route\n            path=\"/popular-polls\"\n            render={() => {\n              return (\n                <PopularPolls\n                  currentUser={this.state.currentUser}\n                  logoutConfirmed={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/my-polls\"\n            render={() => {\n              return (\n                <MyPolls\n                  currentUser={this.state.currentUser}\n                  logoutConfirmed={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.js\";\nimport \"./index.scss\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}